import pickle
from flask import Flask, request, redirect, url_for, render_template, url_for
import base64
from datetime import date

app = Flask(__name__)

comentarios = list()

class Comentario:
    def __init__(self, autor, fecha, contenido):
        self.autor = autor
        self.fecha = fecha
        self.contenido = contenido

@app.route('/')
def index():

    salida = list()

    for comentario in comentarios:
        data = base64.urlsafe_b64decode(comentario)
        comentario = pickle.loads(data)
        salida.append((comentario.autor, str(comentario.fecha), comentario.contenido))
    return render_template('index.html', comentarios = salida)

@app.route('/serializar_comentario', methods = ['POST'])
def serializar_comentario():
    comentario = Comentario(request.form['autor'], date.today(), request.form['contenido'])
    print(comentario)
    print(request.form['autor'])

    comentario_serializado_b64 = base64.urlsafe_b64encode(pickle.dumps(comentario))

    return redirect(url_for('enviar_comentario', comentario = comentario_serializado_b64), 302)
    
@app.route('/enviar_comentario', methods = ['GET'])
def enviar_comentario():
    #print(request.args['comentario'])
    comentarios.append(request.args['comentario'])
    #return "subido!", 200
    return redirect('/', 302)
@app.route('/eliminar_comentarios')
def eliminar_comentarios():
    global comentarios
    comentarios = list()
    return "Comentarios eliminados!", 200
